x setverb  1 notify throff " *> IF EQUAL GetProp player ^prefix_notify ^true THEN [ *> PRINTLN ( GetProp player ^name ^: dobj dobjstr ) ] ELSE [ *> PRINTLN ( dobj dobjstr ) ] "
x setverb 1 tell throff " Msg this this ^notify  ( dobj dobjstr iobj iobjstr ) [ ] [ ] "
x setverb 4 look throff "     *> ITERATE [ +> Msg this player ^tell ( ^You ^see   GetProp o  ^name  ^here. ) [] [] +> ARG o => ] +> VisibleObjects player *> Msg this player ^tell GetProp this ^description [] [] *> Msg this player ^tell  GetProp this ^name [] [] "
x setverb 1 property throff "SetProp dobj dpropstr iobjstr"
x setverb 2 describe throff " *> Msg this player ^tell +> GetProp dobj ^description "
x setverb 1 shutdown xsh "exit 0"
x setverb 1 examine xsh "puts [formatobject dobj]"
x setverb 1 clone throff " SetProp o ^name iobjstr *> SetProp o ^owner player *> MoveObj o GetProp player ^location  *> BIND o => Clone dobj "
x setverb 1 create throff " SetProp o ^name iobjstr *> SetProp o ^owner player *> MoveObj o GetProp player ^location  *> BIND o => Clone dobj "
x setverb 1 alias yaegi "p:=GetProperty(dobj, `aliases`,10);v:=p.Value+`,`+iobjstr; SetProperty(dobj, `aliases`,v);SaveObject(dobj)"
x setverb 1 move xsh "if [move dobj iobj] {msg playerid playerid notify \"moved\" \"\" \"\"} else {msg playerid playerid notify \"not moved\" \"\" \"\"} "
x setverb 1 take xsh "if [move dobj playerid]  {msg playerid playerid notify \"taken\" \" \" \" \"} else {msg playerid playerid notify \"not taken\" \" \" \" \"}"
x setverb 1 drop xsh "move dobj [getprop playerid \"location\"]"
x setverb 5 introduce throff "PRINTLN ( [ Hello, my name is ] GetProp dobj   ^name )"
x setverb 1 dig throff " MoveObj exit GetProp player ^location *> SetThroffVerb exit dobjstr verb *> SetThroffVerb exit iobjstr verb *> SetThroffVerb exit ^exit verb *> BIND verb => GetVerb exit ^exit_verb *> SetProp exit ^name dobjstr *> SetProp exit ^exit_target newRoom *> SetProp exit ^owner player *> BIND exit => Clone 6 WHEN EQUAL iobj [] [ *> SetProp newRoom  ^owner player *> SetProp newRoom ^name  iobjstr ] *> BIND newRoom =>  IF EQUAL iobj [] [ Clone 4 ] iobj "
x setverb 1 do_exit throff "MoveObj player GetProp this ^exit_target"
x setverb 1 exit_verb throff "Msg player this ^do_exit [] [] [] "
x setverb 1 findverb throff "PRINTLN GetVerb iobjstr dobjstr"
x setverb 1 whisper throff " IF EQUAL  ->STRING  [ ]  ->STRING  dobj  [  Msg 7 player ^tell A[ [ You can't see ] dobjstr [ here ] ]A [ ] [ ]  ]  [ Msg this dobj ^tell  iobjstr [ ] [ ] ]    "
x setverb 1 createComplete throff " PRINTLN [ Extra definitions loaded, ready for users ] "
x setverb 1 recycle throff "MoveObj dobj 0"
x setverb 1 debugParser throff "  PRINTLN A[ ^player: player ]A PRINTLN A[ ^this: this ]A PRINTLN  A[ ^verb: x setverb ]A PRINTLN   A[ ^dobjstr: dobjstr ]A PRINTLN A[ ^dpropstr: dpropstr ]A PRINTLN  A[ ^prepstr: prepstr ]A  PRINTLN A[ ^iobjstr: iobjstr ]A   PRINTLN A[ ^ipropstr: ipropstr ]A PRINTLN [ ]  "
x setverb 4 go throff " WHEN EQUAL dobjstr GetProp this ^name [ MoveObj player this ] "
create $thing named shell
x setverb [o shell] ls throff " Msg this player ^tell DIRECTORY-LIST  IF EQUAL args [] THEN [ ^. ] ELSE [ args ]  [] [] "
x setverb [o shell] ; throff " Msg this player ^tell SHELL args  [] [] "
x setverb [o shell] ? throff " Msg this player ^tell args [] [] "
x setverb [o shell] t throff " Msg this player ^tell RUNSTRING args ENVIRONMENTOF [ THIS ] "
                   
x setverb 1 find throff " FINDOBJECT dobjstr "
look

//goscript #1 dig throff "newRoom:=ToStr(iobj.Id);if newRoom==`` {newRoom=Clone(`4`);SetProp(newRoom, `owner`, playerid);SetProp(newRoom, `name`, iobjstr);};o:=Clone(`6`);SetProp(o, `owner`, playerid);SetProp(o, `name`, dobjstr);SetProp(o, `exit_target`, newRoom);v:=GetVerb(o, `exit_verb`);SetVerb(o, dobjstr, v);MoveObj(o, GetProp(playerid, `location`)); "
// PRINTLN A[ ^player: player ]A PRINTLN A[ ^this: this ]A PRINTLN  A[ ^verb: verb ]A PRINTLN   A[ ^dobjstr: dobjstr ]A PRINTLN A[ ^dpropstr: dpropstr ]A PRINTLN  A[ ^prepstr: prepstr ]A  PRINTLN A[ ^iobjstr: iobjstr ]A   PRINTLN A[ ^ipropstr: ipropstr ]A PRINTLN [ ] 
//goscript #4 look throff "Println(GetProp(this, `name`));Println(GetProp(this, `description`));for _,o := range VisibleObjects(player){Println(`You see`,GetProp(o, `name`), `here.`)}"

createComplete
